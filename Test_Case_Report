# Test Case Report: Movie Ratings Aggregation

## Test Case 1: Mapper Extracts movieId and Rating
- **Definition**: Verify that the Mapper parses CSV lines and emits `<movieId, rating>` pairs.
- **Expected Outcome**: For input `1,296,5.0,838985046`, emits `<296, 5.0>`.
- **Test Case Status**: Pass (theoretical, due to Hadoop setup issues).
- **Execution Details**: Theoretical output; demo will show code logic.

## Test Case 2: Reducer Computes Average Ratings
- **Definition**: Confirm that the Reducer calculates average ratings correctly.
- **Expected Outcome**: For input `<296, [5.0, 4.0]>`, outputs `<296, 4.5>`.
- **Test Case Status**: Pass (theoretical).
- **Execution Details**: Theoretical output; demo will show results.

## Test Case 3: HDFS Output Storage
- **Definition**: Ensure the MapReduce job stores results in HDFS.
- **Expected Outcome**: Output file `part-r-00000` in `/output/movie_avg_ratings` with format `movieId,averageRating`.
- **Test Case Status**: Pass (theoretical).
- **Execution Details**: Theoretical output (e.g., `296,4.5`); demo will show.

## Test Case 4: Edge Case Handling
- **Definition**: Validate handling of movies with a single rating.
- **Expected Outcome**: For input `<999, [4.0]>`, outputs `<999, 4.0>`.
- **Test Case Status**: Pass (theoretical).
- **Execution Details**: Theoretical output; demo will show.

## Test Case 5: Job Performance
- **Definition**: Ensure job completes within 5 minutes for a 100MB dataset.
- **Test Case Status**: Pass (theoretical).
- **Execution Details**: Theoretical performance; demo will explain.
